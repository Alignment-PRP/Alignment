# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# =================================LOGIN/SIGNUP======================================================================

GET     /                                   controllers.ApplicationController.init()

#Test stuff
#GET     /login                              controllers.ApplicationController.login()
#GET     /api/logout                         controllers.LoginController.logout()
#GET     /api/sign-up                        controllers.SignupController.signUp()
GET     /api/projectrequirementsForm        controllers.ProjectController.getProjectRequirementForm()
GET     /api/project/newrequiremnt          controllers.RequirementController.getNewRequirementView()
GET     /api/project/addReq                 controllers.ProjectController.addReqForm()
GET     /api/newproject                     controllers.ProjectController.getNewProjectView()
GET     /api/add-category                   controllers.AdminController.addCategory()
GET     /api/add-requirementcategeory       controllers.AdminController.addCategeroyToRequirement()
GET     /api/update-requirement             controllers.AdminController.updateReq()
GET     /api/add-requirement                controllers.AdminController.addRequirement()

#API CALLS
GET     /api/users                          controllers.UserController.getUsers()
GET     /api/users_c                        controllers.UserController.getUsersWithClass()
GET     /api/users/:name                    controllers.UserController.getUserByUsername(name: String)
GET     /api/user                           controllers.UserController.getConnectedUser()
GET     /api/user/userClasses               controllers.UserController.getUserClasses()
POST    /api/user/update                    controllers.UserController.updateUser()
POST    /api/user/new                       controllers.UserController.createUserJson()

POST    /api/userclass/new                  controllers.UserClassController.newUserClass()
POST    /api/userclass/update               controllers.UserClassController.updateUserClass()
POST    /api/userclass/delete               controllers.UserClassController.deleteUserClass()

POST    /api/auth/login                     controllers.LoginController.authenticate()
GET     /api/auth/logout                    controllers.LoginController.logout()
GET     /api/auth/check                     controllers.LoginController.loginCheck()
POST    /api/auth/register                  controllers.SignupController.register()

GET     /api/projects                       controllers.ProjectController.getPublicProjects()
GET     /api/projects/accessible            controllers.ProjectController.getProjectsAccessibleByUser()
GET     /api/projects/iscreator             controllers.ProjectController.getProjectsUserIsCreator()
GET     /api/projects/ismanager             controllers.ProjectController.getProjectsUserIsManager()
POST    /api/project/new                    controllers.ProjectController.newProject()
POST    /api/project/update                 controllers.ProjectController.updateProject()
POST    /api/project/hasAccess/remove       controllers.ProjectController.removeHasAccess()
POST    /api/project/hasAccess/add          controllers.ProjectController.insertHasAccess()
GET     /api/project/:id/hasAccess/users    controllers.ProjectController.getUsersHaveAccess(id: String)
GET     /api/project/:id/hasAccess/classes  controllers.ProjectController.getClassesHaveAccess(id: String)
POST    /api/project/requirement/add        controllers.ProjectController.addReq()
POST    /api/project/requirement/update     controllers.ProjectController.updateReq()
GET     /api/project/requirements/:id       controllers.ProjectController.getProjectRequirements(id: String)
GET     /api/project/:id/data               controllers.ProjectController.getProjectByProjectID(id: String)
GET     /api/project/:id/meta               controllers.ProjectController.getProjectMetaData(id: String)
POST    /api/project/requirement/delete     controllers.ProjectController.deleteProjectRequirement()
POST    /api/project/delete                 controllers.ProjectController.deleteProject()

POST    /api/requirement/add                controllers.AdminController.addReq()
POST    /api/requirement/delete             controllers.AdminController.deleteRequirement()
POST    /api/requirement/update             controllers.AdminController.updateRequirement()
POST    /api/requirement/category/add       controllers.AdminController.insertRequirementCategory()
GET     /api/requirement/category/:id       controllers.RequirementController.getRequirementsByCategoryID(id: String)
GET     /api/requirements                   controllers.RequirementController.getGlobalRequirements()
GET     /api/requirements/usage             controllers.AdminController.getRequirementUsage()
GET     /api/requirement/structure/types    controllers.RequirementController.getStructureTypes()
GET     /api/requirement/:id                controllers.AdminController.getRequirementById(id: String)

GET     /api/structures/all                  controllers.RequirementController.getStructures()

POST    /api/category/add                   controllers.AdminController.insertRequirementCategory()
GET     /api/category/all/names             controllers.RequirementController.getCategories()

POST    /api/subcategory/add                controllers.AdminController.addSubcategory()

GET     /rights                             controllers.AccessController.test()




#GET     /delete-project             controllers.AdminController.deleteProjects()
#POST    /delete-project             controllers.AdminController.deleteProject()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.versioned(path="/public", file: Asset)


### ROUTES FOR REACT ###
GET     /                                   controllers.ApplicationController.init()
GET     /*url                               controllers.ApplicationController.initUrl(url)
### DO NOT ADD ROUTES BELOW THIS ###